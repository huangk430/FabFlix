{"ast":null,"code":"var _jsxFileName = \"/Users/kellyhuang/Documents/CS122B/FRONTEND/CS122B-FE-Starter/src/pages/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { orderComplete, orderPayment } from \"../backend/orders\";\nimport CheckoutForm from \"../pages/CheckoutForm\";\nimport { useUser } from \"../hook/User\";\nimport \"index.css\";\nimport Button from \"@mui/material/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(\"pk_test_51L1KT6A6FPmczoGVaNZ6wlz6oTx3DEOF006dCb7tZqBD5X3htwfpgbwiv2K8QVqUcsKsPvTJTaU6GyqDwn91Kf1i00q5kUixme\"); //CREATE PAYMENT INTENT\n\nexport default function App() {\n  _s();\n\n  const [paymentIntentId, setPaymentIntentId] = useState(\"\");\n  const [clientSecret, setClientSecret] = useState(\"\");\n  const {\n    accessToken\n  } = useUser(); //calling get request from /order/payment endpoint to get paymentintentid\n\n  const createPaymentIntent = () => {\n    orderPayment(accessToken).then(response => {\n      console.log(response.data);\n      setClientSecret(response.data.clientSecret);\n      setPaymentIntentId(response.data.paymentIntentId);\n    }).catch(error => alert(JSON.stringify(error.response.data, null, 2)));\n  };\n\n  useEffect(() => {\n    createPaymentIntent();\n  }, []);\n\n  const completeOrder = (paymentIntentId, accessToken) => {\n    console.log(\"hi\");\n    const payload = {\n      paymentIntentId: paymentIntentId\n    };\n    orderComplete(payload, accessToken).then(response => {\n      alert(JSON.stringify(response.data, null, 2));\n    }).catch(error => alert(JSON.stringify(error.response.data, null, 2)));\n  };\n\n  const appearance = {\n    theme: 'stripe'\n  };\n  const options = {\n    clientSecret,\n    appearance\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: clientSecret && /*#__PURE__*/_jsxDEV(Elements, {\n      options: options,\n      stripe: stripePromise,\n      children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"nIkUJQD9GjCmxyXP6H4xrTCuciY=\", false, function () {\n  return [useUser];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kellyhuang/Documents/CS122B/FRONTEND/CS122B-FE-Starter/src/pages/App.jsx"],"names":["React","useState","useEffect","loadStripe","Elements","orderComplete","orderPayment","CheckoutForm","useUser","Button","stripePromise","App","paymentIntentId","setPaymentIntentId","clientSecret","setClientSecret","accessToken","createPaymentIntent","then","response","console","log","data","catch","error","alert","JSON","stringify","completeOrder","payload","appearance","theme","options"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAAQC,aAAR,EAAuBC,YAAvB,QAA0C,mBAA1C;AAEA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAAQC,OAAR,QAAsB,cAAtB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,aAAa,GAAGP,UAAU,CAAC,6GAAD,CAAhC,C,CAEA;;AACA,eAAe,SAASQ,GAAT,GAAe;AAAA;;AAC1B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAM;AAACe,IAAAA;AAAD,MAAgBR,OAAO,EAA7B,CAJ0B,CAM1B;;AACA,QAAMS,mBAAmB,GAAG,MAAM;AAC9BX,IAAAA,YAAY,CAACU,WAAD,CAAZ,CACKE,IADL,CACUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAP,MAAAA,eAAe,CAACI,QAAQ,CAACG,IAAT,CAAcR,YAAf,CAAf;AACAD,MAAAA,kBAAkB,CAACM,QAAQ,CAACG,IAAT,CAAcV,eAAf,CAAlB;AACH,KALL,EAMKW,KANL,CAMWC,KAAK,IAAIC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,KAAK,CAACL,QAAN,CAAeG,IAA9B,EAAoC,IAApC,EAA0C,CAA1C,CAAD,CANzB;AAOH,GARD;;AAWApB,EAAAA,SAAS,CAAC,MAAM;AAACe,IAAAA,mBAAmB;AAAG,GAA9B,EAAgC,EAAhC,CAAT;;AAEA,QAAMW,aAAa,GAAG,CAAChB,eAAD,EAAkBI,WAAlB,KAAkC;AACpDI,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,UAAMQ,OAAO,GAAG;AACZjB,MAAAA,eAAe,EAAEA;AADL,KAAhB;AAGAP,IAAAA,aAAa,CAACwB,OAAD,EAAUb,WAAV,CAAb,CACKE,IADL,CAEQC,QAAQ,IAAI;AACRM,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeR,QAAQ,CAACG,IAAxB,EAA8B,IAA9B,EAAoC,CAApC,CAAD,CAAL;AACH,KAJT,EAKKC,KALL,CAKWC,KAAK,IAAIC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,KAAK,CAACL,QAAN,CAAeG,IAA9B,EAAoC,IAApC,EAA0C,CAA1C,CAAD,CALzB;AAOH,GAZD;;AAcA,QAAMQ,UAAU,GAAG;AACfC,IAAAA,KAAK,EAAE;AADQ,GAAnB;AAGA,QAAMC,OAAO,GAAG;AACZlB,IAAAA,YADY;AAEZgB,IAAAA;AAFY,GAAhB;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACKhB,YAAY,iBACT,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEkB,OAAnB;AAA4B,MAAA,MAAM,EAAEtB,aAApC;AAAA,6BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GApDuBC,G;UAIEH,O;;;KAJFG,G","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport {orderComplete, orderPayment} from \"../backend/orders\";\n\nimport CheckoutForm from \"../pages/CheckoutForm\";\nimport {useUser} from \"../hook/User\";\nimport \"index.css\";\nimport Button from \"@mui/material/Button\";\n\nconst stripePromise = loadStripe(\"pk_test_51L1KT6A6FPmczoGVaNZ6wlz6oTx3DEOF006dCb7tZqBD5X3htwfpgbwiv2K8QVqUcsKsPvTJTaU6GyqDwn91Kf1i00q5kUixme\");\n\n//CREATE PAYMENT INTENT\nexport default function App() {\n    const [paymentIntentId, setPaymentIntentId] = useState(\"\");\n    const [clientSecret, setClientSecret] = useState(\"\");\n\n    const {accessToken} = useUser();\n\n    //calling get request from /order/payment endpoint to get paymentintentid\n    const createPaymentIntent = () => {\n        orderPayment(accessToken)\n            .then(response => {\n                console.log(response.data)\n                setClientSecret(response.data.clientSecret)\n                setPaymentIntentId(response.data.paymentIntentId)\n            })\n            .catch(error => alert(JSON.stringify(error.response.data, null, 2)))\n    }\n\n\n    useEffect(() => {createPaymentIntent()}, []);\n\n    const completeOrder = (paymentIntentId, accessToken) => {\n        console.log(\"hi\")\n        const payload = {\n            paymentIntentId: paymentIntentId\n        }\n        orderComplete(payload, accessToken)\n            .then(\n                response => {\n                    alert(JSON.stringify(response.data, null, 2))\n                })\n            .catch(error => alert(JSON.stringify(error.response.data, null, 2)));\n\n    }\n\n    const appearance = {\n        theme: 'stripe',\n    };\n    const options = {\n        clientSecret,\n        appearance,\n    };\n\n    return (\n        <div className=\"App\">\n            {clientSecret && (\n                <Elements options={options} stripe={stripePromise}>\n                    <CheckoutForm />\n\n                </Elements>\n            )}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}