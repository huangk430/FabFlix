{"ast":null,"code":"var _jsxFileName = \"/Users/kellyhuang/Documents/CS122B/FRONTEND/CS122B-FE-Starter/src/pages/Payment.jsx\";\nimport React from \"react\";\nimport { ElementsConsumer, PaymentElement } from '@stripe/react-stripe-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CheckoutForm extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleSubmit = async event => {\n      // We don't want to let default form submission happen here,\n      // which would refresh the page.\n      event.preventDefault();\n      const {\n        stripe,\n        elements\n      } = this.props;\n\n      if (!stripe || !elements) {\n        // Stripe.js has not yet loaded.\n        // Make sure to disable form submission until Stripe.js has loaded.\n        return;\n      }\n\n      const result = await stripe.confirmPayment({\n        //`Elements` instance that was used to create the Payment Element\n        elements,\n        confirmParams: {\n          return_url: \"https://example.com/order/123/complete\"\n        }\n      });\n\n      if (result.error) {\n        // Show error to your customer (for example, payment details incomplete)\n        console.log(result.error.message);\n      } else {// Your customer will be redirected to your `return_url`. For some payment\n        // methods like iDEAL, your customer will be redirected to an intermediate\n        // site first to authorize the payment, then redirected to the `return_url`.\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(PaymentElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !this.props.stripe,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default function InjectedCheckoutForm() {\n  return /*#__PURE__*/_jsxDEV(ElementsConsumer, {\n    children: _ref => {\n      let {\n        stripe,\n        elements\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(CheckoutForm, {\n        stripe: stripe,\n        elements: elements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_c = InjectedCheckoutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InjectedCheckoutForm\");","map":{"version":3,"sources":["/Users/kellyhuang/Documents/CS122B/FRONTEND/CS122B-FE-Starter/src/pages/Payment.jsx"],"names":["React","ElementsConsumer","PaymentElement","CheckoutForm","Component","handleSubmit","event","preventDefault","stripe","elements","props","result","confirmPayment","confirmParams","return_url","error","console","log","message","render","InjectedCheckoutForm"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,gBAAR,EAA0BC,cAA1B,QAA+C,yBAA/C;;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SACvCC,YADuC,GACxB,MAAOC,KAAP,IAAiB;AAC5B;AACA;AACAA,MAAAA,KAAK,CAACC,cAAN;AAEA,YAAM;AAACC,QAAAA,MAAD;AAASC,QAAAA;AAAT,UAAqB,KAAKC,KAAhC;;AAEA,UAAI,CAACF,MAAD,IAAW,CAACC,QAAhB,EAA0B;AACtB;AACA;AACA;AACH;;AAED,YAAME,MAAM,GAAG,MAAMH,MAAM,CAACI,cAAP,CAAsB;AACvC;AACAH,QAAAA,QAFuC;AAGvCI,QAAAA,aAAa,EAAE;AACXC,UAAAA,UAAU,EAAE;AADD;AAHwB,OAAtB,CAArB;;AAQA,UAAIH,MAAM,CAACI,KAAX,EAAkB;AACd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACI,KAAP,CAAaG,OAAzB;AACH,OAHD,MAGO,CACH;AACA;AACA;AACH;AACJ,KA9BsC;AAAA;;AAgCvCC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAM,MAAA,QAAQ,EAAE,KAAKd,YAArB;AAAA,8BACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,QAAQ,EAAE,CAAC,KAAKK,KAAL,CAAWF,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAvCsC;;AA0C3C,eAAe,SAASY,oBAAT,GAAgC;AAC3C,sBACI,QAAC,gBAAD;AAAA,cACK;AAAA,UAAC;AAACZ,QAAAA,MAAD;AAASC,QAAAA;AAAT,OAAD;AAAA,0BACG,QAAC,YAAD;AAAc,QAAA,MAAM,EAAED,MAAtB;AAA8B,QAAA,QAAQ,EAAEC;AAAxC;AAAA;AAAA;AAAA;AAAA,cADH;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;KARuBW,oB","sourcesContent":["import React from \"react\";\nimport {ElementsConsumer, PaymentElement} from '@stripe/react-stripe-js';\n\nclass CheckoutForm extends React.Component {\n    handleSubmit = async (event) => {\n        // We don't want to let default form submission happen here,\n        // which would refresh the page.\n        event.preventDefault();\n\n        const {stripe, elements} = this.props;\n\n        if (!stripe || !elements) {\n            // Stripe.js has not yet loaded.\n            // Make sure to disable form submission until Stripe.js has loaded.\n            return;\n        }\n\n        const result = await stripe.confirmPayment({\n            //`Elements` instance that was used to create the Payment Element\n            elements,\n            confirmParams: {\n                return_url: \"https://example.com/order/123/complete\",\n            },\n        });\n\n        if (result.error) {\n            // Show error to your customer (for example, payment details incomplete)\n            console.log(result.error.message);\n        } else {\n            // Your customer will be redirected to your `return_url`. For some payment\n            // methods like iDEAL, your customer will be redirected to an intermediate\n            // site first to authorize the payment, then redirected to the `return_url`.\n        }\n    };\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <PaymentElement />\n                <button disabled={!this.props.stripe}>Submit</button>\n            </form>\n        );\n    }\n}\n\nexport default function InjectedCheckoutForm() {\n    return (\n        <ElementsConsumer>\n            {({stripe, elements}) => (\n                <CheckoutForm stripe={stripe} elements={elements} />\n            )}\n        </ElementsConsumer>\n    )\n}"]},"metadata":{},"sourceType":"module"}