{"ast":null,"code":"var _jsxFileName = \"/Users/kellyhuang/Documents/CS122B/FRONTEND/CS122B-FE-Starter/src/pages/PaymentComplete.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements, useStripe } from \"@stripe/react-stripe-js\";\nimport { orderComplete, orderPayment } from \"../backend/orders\";\nimport CheckoutForm from \"../pages/CheckoutForm\";\nimport { useUser } from \"../hook/User\";\nimport \"index.css\"; //CREATE PAYMENT INTENT\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PaymentComplete() {\n  _s();\n\n  const {\n    accessToken\n  } = useUser();\n  const stripe = useStripe();\n  const [message, setMessage] = useState(null);\n  const clientSecret = new URLSearchParams(window.location.search).get(\"payment_intent_client_secret\");\n  stripe.retrievePaymentIntent(clientSecret).then(_ref => {\n    let {\n      paymentIntent\n    } = _ref;\n    console.log(\"hellasdf\");\n\n    switch (paymentIntent.status) {\n      case \"succeeded\":\n        setMessage(\"Payment succeeded!\");\n        completeOrder(paymentIntent.id, accessToken);\n        break;\n\n      case \"processing\":\n        setMessage(\"Your payment is processing.\");\n        break;\n\n      case \"requires_payment_method\":\n        setMessage(\"Your payment was not successful, please try again.\");\n        break;\n\n      default:\n        setMessage(\"Something went wrong.\");\n        break;\n    }\n  });\n\n  const completeOrder = (paymentIntentId, accessToken) => {\n    console.log(\"complete Order\");\n    const payload = {\n      paymentIntentId: paymentIntentId\n    };\n    orderComplete(payload, accessToken).then(response => {\n      alert(JSON.stringify(response.data, null, 2));\n    }).catch(error => alert(JSON.stringify(error.response.data, null, 2)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Payment Complete!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PaymentComplete, \"WeS+U93/mw8NK41pVvwPhOwrWq8=\", false, function () {\n  return [useUser, useStripe];\n});\n\n_c = PaymentComplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentComplete\");","map":{"version":3,"sources":["/Users/kellyhuang/Documents/CS122B/FRONTEND/CS122B-FE-Starter/src/pages/PaymentComplete.jsx"],"names":["React","useState","useEffect","loadStripe","Elements","useStripe","orderComplete","orderPayment","CheckoutForm","useUser","PaymentComplete","accessToken","stripe","message","setMessage","clientSecret","URLSearchParams","window","location","search","get","retrievePaymentIntent","then","paymentIntent","console","log","status","completeOrder","id","paymentIntentId","payload","response","alert","JSON","stringify","data","catch","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,yBAAlC;AACA,SAAQC,aAAR,EAAuBC,YAAvB,QAA0C,mBAA1C;AAEA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAAQC,OAAR,QAAsB,cAAtB;AACA,OAAO,WAAP,C,CAEA;;;AACA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAkBF,OAAO,EAA/B;AACA,QAAMG,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMc,YAAY,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,EAA4CC,GAA5C,CACjB,8BADiB,CAArB;AAIAR,EAAAA,MAAM,CAACS,qBAAP,CAA6BN,YAA7B,EAA2CO,IAA3C,CAAgD,QAAuB;AAAA,QAAtB;AAAEC,MAAAA;AAAF,KAAsB;AAC/DC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;;AACA,YAAQF,aAAa,CAACG,MAAtB;AACI,WAAK,WAAL;AACIZ,QAAAA,UAAU,CAAC,oBAAD,CAAV;AACAa,QAAAA,aAAa,CAACJ,aAAa,CAACK,EAAf,EAAmBjB,WAAnB,CAAb;AACA;;AACJ,WAAK,YAAL;AACIG,QAAAA,UAAU,CAAC,6BAAD,CAAV;AACA;;AACJ,WAAK,yBAAL;AACIA,QAAAA,UAAU,CAAC,oDAAD,CAAV;AACA;;AACJ;AACIA,QAAAA,UAAU,CAAC,uBAAD,CAAV;AACA;AAbR;AAeH,GAjBL;;AAoBA,QAAMa,aAAa,GAAG,CAACE,eAAD,EAAkBlB,WAAlB,KAAkC;AACpDa,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,UAAMK,OAAO,GAAG;AACZD,MAAAA,eAAe,EAAEA;AADL,KAAhB;AAGAvB,IAAAA,aAAa,CAACwB,OAAD,EAAUnB,WAAV,CAAb,CACKW,IADL,CAEQS,QAAQ,IAAI;AACRC,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,QAAQ,CAACI,IAAxB,EAA8B,IAA9B,EAAoC,CAApC,CAAD,CAAL;AACH,KAJT,EAKKC,KALL,CAKWC,KAAK,IAAIL,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeG,KAAK,CAACN,QAAN,CAAeI,IAA9B,EAAoC,IAApC,EAA0C,CAA1C,CAAD,CALzB;AAOH,GAZD;;AAcA,sBACI;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA/CuBzB,e;UACID,O,EACTJ,S;;;KAFKK,e","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport {Elements, useStripe} from \"@stripe/react-stripe-js\";\nimport {orderComplete, orderPayment} from \"../backend/orders\";\n\nimport CheckoutForm from \"../pages/CheckoutForm\";\nimport {useUser} from \"../hook/User\";\nimport \"index.css\";\n\n//CREATE PAYMENT INTENT\nexport default function PaymentComplete() {\n    const { accessToken } = useUser();\n    const stripe = useStripe();\n    const [message, setMessage] = useState(null);\n    const clientSecret = new URLSearchParams(window.location.search).get(\n        \"payment_intent_client_secret\"\n    );\n\n    stripe.retrievePaymentIntent(clientSecret).then(({ paymentIntent }) => {\n            console.log(\"hellasdf\")\n            switch (paymentIntent.status) {\n                case \"succeeded\":\n                    setMessage(\"Payment succeeded!\");\n                    completeOrder(paymentIntent.id, accessToken);\n                    break;\n                case \"processing\":\n                    setMessage(\"Your payment is processing.\");\n                    break;\n                case \"requires_payment_method\":\n                    setMessage(\"Your payment was not successful, please try again.\");\n                    break;\n                default:\n                    setMessage(\"Something went wrong.\");\n                    break;\n            }\n        })\n\n\n    const completeOrder = (paymentIntentId, accessToken) => {\n        console.log(\"complete Order\")\n        const payload = {\n            paymentIntentId: paymentIntentId\n        }\n        orderComplete(payload, accessToken)\n            .then(\n                response => {\n                    alert(JSON.stringify(response.data, null, 2))\n                })\n            .catch(error => alert(JSON.stringify(error.response.data, null, 2)));\n\n    }\n\n    return (\n        <div>\n            <h1>Payment Complete!</h1>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}